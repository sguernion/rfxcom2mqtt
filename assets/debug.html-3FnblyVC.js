import{_ as e,o as a,c as n,e as o}from"./app-dc2per9E.js";const i={},s=o(`<h1 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h1><p>In case Rfxcom2MQTT isn&#39;t working as expected the following tips can help you in finding the problem.</p><h2 id="enabling-logging" tabindex="-1"><a class="header-anchor" href="#enabling-logging" aria-hidden="true">#</a> Enabling logging</h2><h3 id="rfxcom2mqtt-debug-logging" tabindex="-1"><a class="header-anchor" href="#rfxcom2mqtt-debug-logging" aria-hidden="true">#</a> Rfxcom2MQTT debug logging</h3><p>To enable debug logging for Rfxcom2MQTT add the following in your <code>config.yaml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">debug</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rfxcom-debug-logging" tabindex="-1"><a class="header-anchor" href="#rfxcom-debug-logging" aria-hidden="true">#</a> Rfxcom debug logging</h3><p>To enable debug logging for Rfxcom add the following in your <code>config.yaml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">rfxcom</span><span class="token punctuation">:</span>
  <span class="token key atrule">debug</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),l=[s];function d(c,t){return a(),n("div",null,l)}const r=e(i,[["render",d],["__file","debug.html.vue"]]);export{r as default};
